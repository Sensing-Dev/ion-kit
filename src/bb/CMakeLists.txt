cmake_policy(SET CMP0057 NEW)

set(ION_BB_INCLUDE_DIRS)
set(ION_BB_LINK_DIRS)
set(ION_BB_LIBRARIES)
file(GLOB childs ${CMAKE_CURRENT_SOURCE_DIR}/*)
set(BB_NAMES base dnn fpga image-io image-processing opencv sgm)
foreach(BB_NAME IN LISTS BB_NAMES)
    if(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${BB_NAME})
        set(INCLUDE_DIRS)
        set(LINK_DIRS)
        set(LIBRARIES)
        include(${CMAKE_CURRENT_SOURCE_DIR}/${BB_NAME}/config.cmake)
        if (${ION_BB_BUILD_${BB_NAME}})
            list(APPEND ION_BB_INCLUDE_DIRS ${INCLUDE_DIRS})
            list(APPEND ION_BB_LINK_DIRS    ${LINK_DIRS})
            list(APPEND ION_BB_LIBRARIES    ${LIBRARIES})
            string(TOUPPER ${BB_NAME} POSTFIX)
            string(REPLACE "-" "_" POSTFIX ${POSTFIX})
            add_definitions("-DION_ENABLE_BB_${POSTFIX}")
            set(ION_BB_BUILD_${BB_NAME} TRUE PARENT_SCOPE)
        else()
            set(ION_BB_BUILD_${BB_NAME} FALSE PARENT_SCOPE)
            message("Skip building \"${BB_NAME}\"")
        endif()
    endif()
endforeach()

add_library(ion-bb SHARED bb.cc)
target_include_directories(ion-bb PUBLIC ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/src ${CMAKE_CURRENT_SOURCE_DIR} ${ION_BB_INCLUDE_DIRS})
target_link_libraries(ion-bb PUBLIC ion-core ${ION_BB_LIBRARIES})
if(UNIX)
    target_compile_options(ion-bb PUBLIC -fno-rtti)  # For Halide::Generator
    if(NOT APPLE)
        target_link_options(ion-bb PUBLIC -Wl,--export-dynamic) # For JIT compiling
    endif()
elseif(MSVC)
    target_compile_options(ion-bb
        PUBLIC /bigobj)
endif()

#
# Install
#
if (UNIX)
    install(TARGETS ion-bb DESTINATION lib)
else()
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/$<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>/ion-bb.dll DESTINATION bin)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/$<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>/ion-bb.lib DESTINATION lib)
endif()
